// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using balance_dp.Models;

namespace balance_dp.Migrations
{
    [DbContext(typeof(DPContext))]
    [Migration("20210115082326_Mig")]
    partial class Mig
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("balance_dp.Models.BlastFurnace", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("list1_C20_Dailyproductivity")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C21_CockCUMsuption")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C23_EffectVolume")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C24_HeatLoses_ofBlastFurnace")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.ToTable("BlastFurnace");
                });

            modelBuilder.Entity("balance_dp.Models.BlastFurnaceGas", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("list1_C61_GasTemperature")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C62_CO2_Capacity")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C63_CO_Capacity")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C64_H2_Capacity")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C66_DustExit")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C67_FeO_Capacity")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.ToTable("BlastFurnaceGas");
                });

            modelBuilder.Entity("balance_dp.Models.BlowingParams", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("list1_C32_BlowingConsumptionPerMinute")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C33_HotBlowingTemperature")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C34_BlowingMoistureTechReport")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C35_NaturalBlowingConsumption")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C37_PersentOxygenInBlowing")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C38_SpecificConsuptionNaturalGas")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C39_CH4Consuption")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C40_C2H6Comsuption")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C41_C3H8Comsuption")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C42_CO2Comsuption")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C43_C_Capacity")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C44_H2_Capacity")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C46_limestoneWaterCapacity")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C47_limestoneWeightLoss")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.ToTable("BlowingParams");
                });

            modelBuilder.Entity("balance_dp.Models.COCKsAsh", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("list2_A46_Fe")
                        .HasColumnType("REAL");

                    b.Property<float>("list2_B46_Cao")
                        .HasColumnType("REAL");

                    b.Property<float>("list2_C46_Sio2")
                        .HasColumnType("REAL");

                    b.Property<float>("list2_D46_Al2O3")
                        .HasColumnType("REAL");

                    b.Property<float>("list2_E46_MgO")
                        .HasColumnType("REAL");

                    b.Property<float>("list2_F46_P")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.ToTable("COCKsAsh");
                });

            modelBuilder.Entity("balance_dp.Models.COCKsComposition", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("list2_A42_AhsCocks")
                        .HasColumnType("REAL");

                    b.Property<float>("list2_B42_SulfurCocks")
                        .HasColumnType("REAL");

                    b.Property<float>("list2_C42_LiquidCocks")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.ToTable("COCKsComposition");
                });

            modelBuilder.Entity("balance_dp.Models.COCKsParamsPersent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CocksAshID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CocksCompositID")
                        .HasColumnType("INTEGER");

                    b.Property<float>("list1_C29_WaterCOCKs")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C30_FeoCOCKs")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.HasIndex("CocksAshID");

                    b.HasIndex("CocksCompositID");

                    b.ToTable("COCKsParamsPersent");
                });

            modelBuilder.Entity("balance_dp.Models.CastIronElementsPercent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("list1_C10_Mn")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C11_S")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C12_P")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C13_Ti")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C14_Cr")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C15_V")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C17_CastIronTemperature")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C18_CastIronHeatCapacity")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C9_Si")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_С16_C")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.ToTable("CastIronElementsPercent");
                });

            modelBuilder.Entity("balance_dp.Models.DPInputData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CastID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("InputData2ID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("InputIndicatorsID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NAME")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CastID");

                    b.HasIndex("InputData2ID");

                    b.HasIndex("InputIndicatorsID");

                    b.ToTable("Inputs");
                });

            modelBuilder.Entity("balance_dp.Models.Flus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FluospatID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LimestoneID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("QuartziteID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ReserveID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SlugID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("FluospatID");

                    b.HasIndex("LimestoneID");

                    b.HasIndex("QuartziteID");

                    b.HasIndex("ReserveID");

                    b.HasIndex("SlugID");

                    b.ToTable("Flus");
                });

            modelBuilder.Entity("balance_dp.Models.FlusModels", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("list2_B33flusConsuption")
                        .HasColumnType("REAL");

                    b.Property<float>("list2_C33_CaO_Capacity")
                        .HasColumnType("REAL");

                    b.Property<float>("list2_D33_SiO2_Capacity")
                        .HasColumnType("REAL");

                    b.Property<float>("list2_E33_Al2O3_Capacity")
                        .HasColumnType("REAL");

                    b.Property<float>("list2_F33_MgO_Capacity")
                        .HasColumnType("REAL");

                    b.Property<float>("list2_G33_TiO2Capacity")
                        .HasColumnType("REAL");

                    b.Property<float>("list2_H33_MnO_Capacity")
                        .HasColumnType("REAL");

                    b.Property<float>("list2_I33_P_Capacity")
                        .HasColumnType("REAL");

                    b.Property<float>("list2_J33_S_Capacity")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.ToTable("FlusModels");
                });

            modelBuilder.Entity("balance_dp.Models.InputParametrsList1", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BlastFurID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CastIronID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CockParamID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FurnaceGasID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("blowingID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("slagID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("zhrmID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("BlastFurID");

                    b.HasIndex("CastIronID");

                    b.HasIndex("CockParamID");

                    b.HasIndex("FurnaceGasID");

                    b.HasIndex("blowingID");

                    b.HasIndex("slagID");

                    b.HasIndex("zhrmID");

                    b.ToTable("InputIndicators");
                });

            modelBuilder.Entity("balance_dp.Models.InputParametrsList2", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("flusID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("materialConsID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("flusID");

                    b.HasIndex("materialConsID");

                    b.ToTable("InputData2");
                });

            modelBuilder.Entity("balance_dp.Models.MaterialConsuption", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("A8_Fe")
                        .HasColumnType("REAL");

                    b.Property<float>("B8_FeO")
                        .HasColumnType("REAL");

                    b.Property<float>("C8_Fe2O3")
                        .HasColumnType("REAL");

                    b.Property<float>("D8_SiO2")
                        .HasColumnType("REAL");

                    b.Property<float>("E8_AlO3")
                        .HasColumnType("REAL");

                    b.Property<float>("F8_CaO")
                        .HasColumnType("REAL");

                    b.Property<float>("G8_MgO")
                        .HasColumnType("REAL");

                    b.Property<float>("H8_P")
                        .HasColumnType("REAL");

                    b.Property<float>("I8_S")
                        .HasColumnType("REAL");

                    b.Property<float>("J8_MnO")
                        .HasColumnType("REAL");

                    b.Property<float>("K8_Zn")
                        .HasColumnType("REAL");

                    b.Property<float>("L8_Pmpp")
                        .HasColumnType("REAL");

                    b.Property<float>("M8_H20")
                        .HasColumnType("REAL");

                    b.Property<float>("N8_TiO2")
                        .HasColumnType("REAL");

                    b.Property<float>("O8_Cr")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.ToTable("MaterialConsuption");
                });

            modelBuilder.Entity("balance_dp.Models.Slag", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("list1_C49_SlagOutput")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C50_SulfurCapacity")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C51_HeatCapacity")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C53_CaO_Capacity")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C54_SiO2_Caacity")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C55_Al2O3_Capacity")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C56_MgO_Capacity")
                        .HasColumnType("REAL");

                    b.Property<float>("list1_C58_TiO2_Capacity")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.ToTable("Slag");
                });

            modelBuilder.Entity("balance_dp.Models.ZHRM", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("c69")
                        .HasColumnType("REAL");

                    b.Property<float>("c70")
                        .HasColumnType("REAL");

                    b.Property<float>("c71")
                        .HasColumnType("REAL");

                    b.Property<float>("c72_waterCapacity")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.ToTable("ZHRM");
                });

            modelBuilder.Entity("balance_dp.Models.COCKsParamsPersent", b =>
                {
                    b.HasOne("balance_dp.Models.COCKsAsh", "CocksAsh")
                        .WithMany()
                        .HasForeignKey("CocksAshID");

                    b.HasOne("balance_dp.Models.COCKsComposition", "CocksComposit")
                        .WithMany()
                        .HasForeignKey("CocksCompositID");

                    b.Navigation("CocksAsh");

                    b.Navigation("CocksComposit");
                });

            modelBuilder.Entity("balance_dp.Models.DPInputData", b =>
                {
                    b.HasOne("balance_dp.Models.CastIronElementsPercent", "Cast")
                        .WithMany()
                        .HasForeignKey("CastID");

                    b.HasOne("balance_dp.Models.InputParametrsList2", "InputData2")
                        .WithMany()
                        .HasForeignKey("InputData2ID");

                    b.HasOne("balance_dp.Models.InputParametrsList1", "InputIndicators")
                        .WithMany()
                        .HasForeignKey("InputIndicatorsID");

                    b.Navigation("Cast");

                    b.Navigation("InputData2");

                    b.Navigation("InputIndicators");
                });

            modelBuilder.Entity("balance_dp.Models.Flus", b =>
                {
                    b.HasOne("balance_dp.Models.FlusModels", "Fluospat")
                        .WithMany()
                        .HasForeignKey("FluospatID");

                    b.HasOne("balance_dp.Models.FlusModels", "Limestone")
                        .WithMany()
                        .HasForeignKey("LimestoneID");

                    b.HasOne("balance_dp.Models.FlusModels", "Quartzite")
                        .WithMany()
                        .HasForeignKey("QuartziteID");

                    b.HasOne("balance_dp.Models.FlusModels", "Reserve")
                        .WithMany()
                        .HasForeignKey("ReserveID");

                    b.HasOne("balance_dp.Models.FlusModels", "Slug")
                        .WithMany()
                        .HasForeignKey("SlugID");

                    b.Navigation("Fluospat");

                    b.Navigation("Limestone");

                    b.Navigation("Quartzite");

                    b.Navigation("Reserve");

                    b.Navigation("Slug");
                });

            modelBuilder.Entity("balance_dp.Models.InputParametrsList1", b =>
                {
                    b.HasOne("balance_dp.Models.BlastFurnace", "BlastFur")
                        .WithMany()
                        .HasForeignKey("BlastFurID");

                    b.HasOne("balance_dp.Models.CastIronElementsPercent", "CastIron")
                        .WithMany()
                        .HasForeignKey("CastIronID");

                    b.HasOne("balance_dp.Models.COCKsParamsPersent", "CockParam")
                        .WithMany()
                        .HasForeignKey("CockParamID");

                    b.HasOne("balance_dp.Models.BlastFurnaceGas", "FurnaceGas")
                        .WithMany()
                        .HasForeignKey("FurnaceGasID");

                    b.HasOne("balance_dp.Models.BlowingParams", "blowing")
                        .WithMany()
                        .HasForeignKey("blowingID");

                    b.HasOne("balance_dp.Models.Slag", "slag")
                        .WithMany()
                        .HasForeignKey("slagID");

                    b.HasOne("balance_dp.Models.ZHRM", "zhrm")
                        .WithMany()
                        .HasForeignKey("zhrmID");

                    b.Navigation("BlastFur");

                    b.Navigation("blowing");

                    b.Navigation("CastIron");

                    b.Navigation("CockParam");

                    b.Navigation("FurnaceGas");

                    b.Navigation("slag");

                    b.Navigation("zhrm");
                });

            modelBuilder.Entity("balance_dp.Models.InputParametrsList2", b =>
                {
                    b.HasOne("balance_dp.Models.Flus", "flus")
                        .WithMany()
                        .HasForeignKey("flusID");

                    b.HasOne("balance_dp.Models.MaterialConsuption", "materialCons")
                        .WithMany()
                        .HasForeignKey("materialConsID");

                    b.Navigation("flus");

                    b.Navigation("materialCons");
                });
#pragma warning restore 612, 618
        }
    }
}
